protocal+IP+PORT = API
http://233.43.452:3000/home
web-server:
server connected with internet through protocol
HTTP:
hyper-text-transferprotocol
create-webserver for nodejs = express
PORT-it is a path to transfer
3000-8000 is available


FTP:
SMTP:
SSH:

postman-token:postman://auth/callback?code=861eb6d4a42521403d2fe54a8f3a2d47c037e24789af10ecac67d6e43e841522


URL parameters - to get specific user
Query parameters - 

fix-debug launch
go to the cmd type sh ~scannow


error-fix:
Error[ERR_HTTP_HEADERS_SENT]:cannot set headers after they are sent to the client in nodejs
reference:https://www.youtube.com/watch?v=6MJkepwuMk8



nodemailer - package
nodemailer.com
smtp.email.com
"use strict";
const nodemailer = require("nodemailer");

// async..await is not allowed in global scope, must use a wrapper
async function main() {
  // Generate test SMTP service account from ethereal.email
  // Only needed if you don't have a real mail account for testing
  let testAccount = await nodemailer.createTestAccount();

  // create reusable transporter object using the default SMTP transport
  let transporter = nodemailer.createTransport({
    host: "smtp.ethereal.email",
    port: 587,
    secure: false, // true for 465, false for other ports
    auth: {
      user: testAccount.user, // generated ethereal user
      pass: testAccount.pass, // generated ethereal password
    },
  });

  // send mail with defined transport object
  let info = await transporter.sendMail({
    from: '"Fred Foo ðŸ‘»" <foo@example.com>', // sender address
    to: "bar@example.com, baz@example.com", // list of receivers
    subject: "Hello âœ”", // Subject line
    text: "Hello world?", // plain text body
    html: "<b>Hello world?</b>", // html body
  });

  console.log("Message sent: %s", info.messageId);
  // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>

  // Preview only available when sending through an Ethereal account
  console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
  // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...
}

main().catch(console.error);



//forgot password
step1:user clicks forgot password
step2:user will Enter email address
step3:user will recieve email for password reset(10mins)
step4:user clicks the link and reset the password